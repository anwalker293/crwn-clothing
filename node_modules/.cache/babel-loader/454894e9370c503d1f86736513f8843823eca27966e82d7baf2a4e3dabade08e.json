{"ast":null,"code":"var _jsxFileName = \"/Users/alex.walker/Zero-to-Mastery/React-Course/crown-clothing/src/contexts/cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  // find if cartItems contains productToAdd\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n  // if found, increment quantity\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n  // return new array with modified cartItems/new cart item\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  cartCount: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    cartItems,\n    cartCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"1STVRVZJMMTq6OZavO9o7qwZdno=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","CartContext","isCartOpen","setIsCartOpen","addItemToCart","cartCount","CartProvider","children","setCartItems","setCartCount","useEffect","newCartCount","reduce","total","value"],"sources":["/Users/alex.walker/Zero-to-Mastery/React-Course/crown-clothing/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  // find if cartItems contains productToAdd\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  );\n  // if found, increment quantity\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n  // return new array with modified cartItems/new cart item\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  cartCount: 0,\n});\n\nexport const CartProvider = ({ children }) => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n\n  useEffect(() => {\n    const newCartCount = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity,\n      0\n    );\n    setCartCount(newCartCount);\n  }, [cartItems]);\n\n  const addItemToCart = (productToAdd) => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    cartItems,\n    cartCount,\n  };\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEhD,MAAMC,WAAW,GAAG,CAACC,SAAS,EAAEC,YAAY,KAAK;EAC/C;EACA,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAI,CACpCC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKJ,YAAY,CAACI,EAAE,CAC9C;EACD;EACA,IAAIH,gBAAgB,EAAE;IACpB,OAAOF,SAAS,CAACM,GAAG,CAAEF,QAAQ,IAC5BA,QAAQ,CAACC,EAAE,KAAKJ,YAAY,CAACI,EAAE,GAC3B;MAAE,GAAGD,QAAQ;MAAEG,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,GAAG;IAAE,CAAC,GAChDH,QAAQ,CACb;EACH;EACA;EACA,OAAO,CAAC,GAAGJ,SAAS,EAAE;IAAE,GAAGC,YAAY;IAAEM,QAAQ,EAAE;EAAE,CAAC,CAAC;AACzD,CAAC;AAED,OAAO,MAAMC,WAAW,gBAAGX,aAAa,CAAC;EACvCY,UAAU,EAAE,KAAK;EACjBC,aAAa,EAAE,MAAM,CAAC,CAAC;EACvBV,SAAS,EAAE,EAAE;EACbW,aAAa,EAAE,MAAM,CAAC,CAAC;EACvBC,SAAS,EAAE;AACb,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACvC,MAAM,CAACL,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACE,SAAS,EAAEe,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,SAAS,EAAEI,YAAY,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAE7CmB,SAAS,CAAC,MAAM;IACd,MAAMC,YAAY,GAAGlB,SAAS,CAACmB,MAAM,CACnC,CAACC,KAAK,EAAEhB,QAAQ,KAAKgB,KAAK,GAAGhB,QAAQ,CAACG,QAAQ,EAC9C,CAAC,CACF;IACDS,YAAY,CAACE,YAAY,CAAC;EAC5B,CAAC,EAAE,CAAClB,SAAS,CAAC,CAAC;EAEf,MAAMW,aAAa,GAAIV,YAAY,IAAK;IACtCc,YAAY,CAAChB,WAAW,CAACC,SAAS,EAAEC,YAAY,CAAC,CAAC;EACpD,CAAC;EAED,MAAMoB,KAAK,GAAG;IACZZ,UAAU;IACVC,aAAa;IACbC,aAAa;IACbX,SAAS;IACTY;EACF,CAAC;EACD,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAES,KAAM;IAAA,UAAEP;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AAC9E,CAAC;AAAC,GAzBWD,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}