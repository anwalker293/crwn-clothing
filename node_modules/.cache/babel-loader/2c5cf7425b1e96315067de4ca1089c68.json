{"ast":null,"code":"var _jsxFileName = \"/Users/alex.walker/Zero-to-Mastery/crwn-clothing/src/contexts/user.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from \"react\";\nimport { createAction } from \"../utils/reducer/reducer.utils\";\nimport { onAuthStateChangedListener, createUserDocumentFromAuth } from \"../utils/firebase/firebase.utils.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  setCurrentUser: () => null,\n  currentUser: null\n});\nexport const USER_ACTION_TYPES = {\n  SET_CURRENT_USER: \"SET_CURRENT_USER\"\n};\n\nconst userReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case USER_ACTION_TYPES.SET_CURRENT_USER:\n      return { ...state,\n        currentUser: payload\n      };\n\n    default:\n      throw new Error(`Unhandled type ${type} in userReducer`);\n  }\n};\n\nconst INITIAL_STATE = {\n  currentUser: null\n};\nexport const UserProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // const [currentUser, setCurrentUser] = useState(null);\n  const [{\n    currentUser\n  }, dispatch] = useReducer(userReducer, INITIAL_STATE);\n\n  const setCurrentUser = user => {\n    dispatch({\n      type: USER_ACTION_TYPES.SET_CURRENT_USER,\n      payload: user\n    });\n  };\n\n  const value = {\n    currentUser,\n    setCurrentUser\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangedListener(user => {\n      if (user) {\n        createUserDocumentFromAuth(user);\n      }\n\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n};\n\n_s(UserProvider, \"4MCG2lfWYDhUrag1f5xCpMt+rJI=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/alex.walker/Zero-to-Mastery/crwn-clothing/src/contexts/user.context.jsx"],"names":["createContext","useEffect","useReducer","createAction","onAuthStateChangedListener","createUserDocumentFromAuth","UserContext","setCurrentUser","currentUser","USER_ACTION_TYPES","SET_CURRENT_USER","userReducer","state","action","type","payload","Error","INITIAL_STATE","UserProvider","children","dispatch","user","value","unsubscribe"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD;AAEA,SAASC,YAAT,QAA6B,gCAA7B;AAEA,SACEC,0BADF,EAEEC,0BAFF,QAGO,qCAHP;;AAKA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC;AACvCO,EAAAA,cAAc,EAAE,MAAM,IADiB;AAEvCC,EAAAA,WAAW,EAAE;AAF0B,CAAD,CAAjC;AAKP,OAAO,MAAMC,iBAAiB,GAAG;AAC/BC,EAAAA,gBAAgB,EAAE;AADa,CAA1B;;AAIP,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKL,iBAAiB,CAACC,gBAAvB;AACE,aAAO,EACL,GAAGE,KADE;AAELJ,QAAAA,WAAW,EAAEO;AAFR,OAAP;;AAIF;AACE,YAAM,IAAIC,KAAJ,CAAW,kBAAiBF,IAAK,iBAAjC,CAAN;AAPJ;AASD,CAZD;;AAcA,MAAMG,aAAa,GAAG;AACpBT,EAAAA,WAAW,EAAE;AADO,CAAtB;AAIA,OAAO,MAAMU,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C;AACA,QAAM,CAAC;AAAEX,IAAAA;AAAF,GAAD,EAAkBY,QAAlB,IAA8BlB,UAAU,CAACS,WAAD,EAAcM,aAAd,CAA9C;;AAEA,QAAMV,cAAc,GAAIc,IAAD,IAAU;AAC/BD,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAEL,iBAAiB,CAACC,gBAA1B;AAA4CK,MAAAA,OAAO,EAAEM;AAArD,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,KAAK,GAAG;AAAEd,IAAAA,WAAF;AAAeD,IAAAA;AAAf,GAAd;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,WAAW,GAAGnB,0BAA0B,CAAEiB,IAAD,IAAU;AACvD,UAAIA,IAAJ,EAAU;AACRhB,QAAAA,0BAA0B,CAACgB,IAAD,CAA1B;AACD;;AACDd,MAAAA,cAAc,CAACc,IAAD,CAAd;AACD,KAL6C,CAA9C;AAMA,WAAOE,WAAP;AACD,GARQ,EAQN,EARM,CAAT;AAUA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED,KAA7B;AAAA,cAAqCH;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CArBM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\n\nimport { createAction } from \"../utils/reducer/reducer.utils\";\n\nimport {\n  onAuthStateChangedListener,\n  createUserDocumentFromAuth,\n} from \"../utils/firebase/firebase.utils.js\";\n\nexport const UserContext = createContext({\n  setCurrentUser: () => null,\n  currentUser: null,\n});\n\nexport const USER_ACTION_TYPES = {\n  SET_CURRENT_USER: \"SET_CURRENT_USER\",\n};\n\nconst userReducer = (state, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_ACTION_TYPES.SET_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: payload,\n      };\n    default:\n      throw new Error(`Unhandled type ${type} in userReducer`);\n  }\n};\n\nconst INITIAL_STATE = {\n  currentUser: null,\n};\n\nexport const UserProvider = ({ children }) => {\n  // const [currentUser, setCurrentUser] = useState(null);\n  const [{ currentUser }, dispatch] = useReducer(userReducer, INITIAL_STATE);\n\n  const setCurrentUser = (user) => {\n    dispatch({ type: USER_ACTION_TYPES.SET_CURRENT_USER, payload: user });\n  };\n\n  const value = { currentUser, setCurrentUser };\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangedListener((user) => {\n      if (user) {\n        createUserDocumentFromAuth(user);\n      }\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}